## ----------------------------------------------------------
## Dockerfile basicrobot
## ----------------------------------------------------------
## In order to build the container type the following commands:
## 1) gradlew distTar
## 2) Essendo l'immagine pensata per essere eseguita su raspberry, che ha architettura arm, occorre 
##    fare build per l'opportuna piattaforma su cui il container eseguirà. 
##    A tal scopo il comando docker buildx ci viene in ausilio. Per abilitare il build
##    su altre architetture occorre anzitutto creare un opportuno builder:
##      docker buildx create --use --name multiarch-builder
##      docker buildx inspect --bootstrap
##    Per poter fare la build di architetture diverse è necessario QEMU, che può essere 
##    installato digitando:
##      docker run --privileged --rm tonistiigi/binfmt --install all
##    (se questi step per configurare buildx sono già stati effettuati non è necessario ripeterli)
##    Infine, l'immagine può essere costruita:
##      docker buildx build --platform linux/arm64/v8 -t basicrobot:arm --load .
## 3) è possibile condividere l'immagine con un raspberry sulla stessa LAN:
##      docker save basicrobot:arm | ssh user@<MD-ip> 'sudo docker load'
##    oppure, facendo push su docker hub. In tal caso occorre fare tag dell'immagine locale:
##      docker tag basicrobot:arm <username>/basicrobot:arm
##    dove <username> denota il nome utente del proprio repository dockerhub.
##    Occorre poi fare login:
##      docker login --username <username>
##    e infine fare push:
##      docker push <username>/basicrobot:arm
##
## docker run -it --rm --name basicrobot -p 8020:8020/tcp -p 8020:8020/udp -p 8085:8085/tcp basicrobot:1.0  sh
FROM arm64v8/alpine

## EXPOSE 8200
RUN apk update
RUN set -xe && apk add --no-cache libgpiod gcc build-base linux-headers musl-dev libgpiod-dev stunnel
RUN apk add --no-cache openjdk11-jdk 

## ADD extracts the tar
ADD ./build/distributions/basicrobot24-1.0.tar /
## EXPOSE 8200
WORKDIR /basicrobot24-1.0/bin
COPY ./*.pl ./
COPY ./*.json ./
COPY ./*.bin ./
COPY ./*.txt ./
COPY ./MotorsUpdated.c ./
COPY ./sonar.c ./

RUN gcc MotorsUpdated.c -o Motors -lgpiod
RUN gcc sonar.c -o sonar -lgpiod
CMD ["sh", "-c", "./basicrobot24"]

## 1) gradlew distTar
## 2) docker build -t basicrobot24:1.0 .
## OCCORRE APRIRE UDP PER PERMETTERE COAP
## docker run -it --rm --name basicrobot24 -p8020:8020/tcp -p8020:8020/udp  --privileged basicrobot24:1.0  /bin/bash
## MODIFICA DEL FILE DI CONFIGURAZIONE
# docker cp basicrobotConfig.json 89193dba02a2:/basicrobot24-1.0/bin/basicrobotConfig.json
# docker cp stepTimeConfig.json cab3aa29f8eb:/basicrobot24-1.0/bin/stepTimeConfig.json
# docker tag basicrobot24:1.0 natbodocker/basicrobot24:1.0

#type docker_password.txt | docker login --username natbodocker --password-stdin
#docker login --username natbodocker --password xyz
#docker push natbodocker/basicrobot24:1.0


# docker-compose -f basicrobot24.yaml  up